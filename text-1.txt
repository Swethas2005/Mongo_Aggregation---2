1. Write Mongo query to retrieve documents from the orders in ascending order by total:
ans: db.orders.find().sort({ total: 1 })

2. Write Mongo query to retrieve the oldest paymentMethod from the payments collection as "_id":
ans: db.payments.find().sort({ payment_date: 1 }).limit(1).project({ paymentMethod: 1 })

3. Write Mongo query to retrieve 2nd and 3rd buyers from the buyers collection:
ans: db.buyers.find().skip(1).limit(2)

4. Write Mongo query to retrieve the most Expensive product from order_details:
ans: db.order_details.find().sort({ price: -1 }).limit(1)

5. Write Mongo query to retrieve the first order from the orders as per the order_date:
ans: db.orders.find().sort({ order_date: 1 }).limit(1)

6. Write Mongo query to retrieve the last 3 orders from the orders collection who have less total amount:
ans: db.orders.find().sort({ total: 1 }).limit(3)

7. Write Mongo query to retrieve the most recent shipped order from the orders collection:
ans: db.orders.find({ status: "shipped" }).sort({ ship_date: -1 }).limit(1)

8. Write Mongo query to get the total revenue from all orders:
ans: db.orders.aggregate([
       { $group: { _id: null, totalRevenue: { $sum: "$total" } } }
     ])

9. Write Mongo query to retrieve all the orders that shipped before 2022-05-26:
ans: db.orders.find({ ship_date: { $lt: new Date("2022-05-26") } })

10. Write Mongo query to find the maximum price as maxPrice of products and their names as name for each category:
ans: db.products.aggregate([
        { $group: { _id: "$category_id", maxPrice: { $max: "$price" }, name: { $first: "$name" } } }
      ])

11. Write Mongo query to find Most used payment Method as paymentMethod and the number of time it is used as count:
ans: db.payments.aggregate([
        { $group: { _id: "$paymentMethod", count: { $sum: 1 } } },
        { $sort: { count: -1 } }
      ])

12. Write Mongo query to find the total count of orders by status:
ans: db.orders.aggregate([
        { $group: { _id: "$status", count: { $sum: 1 } } }
      ])

13. Write Mongo query to retrieve the orders grouped by customer_id with the max total:
ans: db.orders.aggregate([
        { $group: { _id: "$customer_id", maxTotal: { $max: "$total" } } }
      ])
